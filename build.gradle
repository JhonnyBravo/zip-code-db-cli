buildscript {
	ext {
		springBootVersion = '2.4.5'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

group = 'com.github.JhonnyBravo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
	mavenCentral()
	maven{ url 'https://jitpack.io'}
}

dependencies {
	compile group: 'gnu.getopt', name: 'java-getopt', version: '1.0.13'
	compile group: 'com.opencsv', name: 'opencsv', version: '5.4'
	compile 'com.github.JhonnyBravo:java-itamae-connection:master-SNAPSHOT'
	compile ('org.springframework.boot:spring-boot-starter-data-jpa')
	compile ('org.springframework.boot:spring-boot-starter')
	testCompile ('org.springframework.boot:spring-boot-starter-test')
	testCompile ('junit:junit:4.13.2')
}

task sourcesJar(type: Jar,dependsOn: classes){
    classifier='sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar,dependsOn: javadoc){
    classifier='javadoc'
    from javadoc.destinationDir
}

artifacts{
    archives sourcesJar
    archives javadocJar
}

javadoc{
    options.charSet='UTF-8'
    options.encoding='UTF-8'
}

checkstyle {
    toolVersion='8.41.1'
}

pmd {
    toolVersion='6.33.0'
    ignoreFailures=true
    ruleSetFiles=files("config/pmd/custom-java.xml")
    ruleSets=[]
}

tasks.withType(JavaCompile){
    options.encoding='UTF-8'
}
