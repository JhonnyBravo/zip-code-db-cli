/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java'
    id 'eclipse'
    id 'maven'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {url 'https://jitpack.io'}
}

dependencies {
    compile group: 'com.opencsv', name: 'opencsv', version: '4.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
    compile 'com.github.JhonnyBravo:java-itamae-contents:master-SNAPSHOT'
    compile 'com.github.JhonnyBravo:java-itamae-properties:master-SNAPSHOT'
    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

group='com.github.JhonnyBravo'
sourceCompatibility=1.8
targetCompatibility=1.8

task sourcesJar(type: Jar, dependsOn: classes){
    classifier='sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc){
    classifier='javadoc'
    from javadoc.destinationDir
}

artifacts{
    archives sourcesJar
    archives javadocJar
}

javadoc{
    options.charSet='UTF-8'
    options.encoding='UTF-8'
}

tasks.withType(JavaCompile){
    options.encoding='UTF-8'
}

afterEvaluate{
    jar{
        manifest{
            attributes 'Main-Class': getProperty('jar.manifest.attributes.Main-Class')
            attributes 'Class-Path': configurations.runtime.collect{it.name}.join(' ')
        }
        
        doLast{
            copy{
                from configurations.runtime
                into destinationDir
            }
        }
    }
}
